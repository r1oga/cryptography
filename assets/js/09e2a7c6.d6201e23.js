"use strict";(self.webpackChunkcryptography=self.webpackChunkcryptography||[]).push([[7327],{461:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>y});var r=n(9496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(n),f=i,y=d["".concat(p,".").concat(f)]||d[f]||m[f]||a;return n?r.createElement(y,o(o({ref:t},l),{},{components:n})):r.createElement(y,o({ref:t},l))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2766:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7605),i=(n(9496),n(461));const a={sidebar_position:6,title:"AES"},o="Advanced Encryption Standard (AES)",s={unversionedId:"primitives/symmetric-encryption/aes",id:"primitives/symmetric-encryption/aes",title:"AES",description:"The Advanced Encryption Standard (original name Rijndael) is Block Cipher implementation specified by the U.S. National Institute of Standards and Technology (NIST) in 2001.",source:"@site/docs/primitives/symmetric-encryption/aes.md",sourceDirName:"primitives/symmetric-encryption",slug:"/primitives/symmetric-encryption/aes",permalink:"/cryptography/docs/primitives/symmetric-encryption/aes",draft:!1,editUrl:"https://github.com/sripwoud/cryptography/tree/main/docs/docs/primitives/symmetric-encryption/aes.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"AES"},sidebar:"tutorialSidebar",previous:{title:"CBC",permalink:"/cryptography/docs/primitives/symmetric-encryption/cbc"},next:{title:"AES-CBC",permalink:"/cryptography/docs/primitives/symmetric-encryption/aes-cbc"}},p={},c=[{value:"Limitations/Caveats",id:"limitationscaveats",level:2}],l={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"advanced-encryption-standard-aes"},"Advanced Encryption Standard (AES)"),(0,i.kt)("p",null,"The Advanced Encryption Standard (original name Rijndael) is Block Cipher implementation specified by the U.S. National Institute of Standards and Technology (NIST) in 2001",(0,i.kt)("sup",{parentName:"p",id:"fnref-1"},(0,i.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),"."),(0,i.kt)("mermaid",{value:'graph LR\n\n    PT([Plaintext<br><em>128 bits</em>]) --\x3e AES[AES]\n    SK(["Key<br><em>secret<br>128|192|256 bits</em>"]) --\x3e AES\n    AES --\x3e |encryption|C([Ciphertext<br><em>128 bits</em>])\n    \n    style SK fill:#f9f,stroke:#333,stroke-width:4px'}),(0,i.kt)("p",null,"Under the hood, AES uses a round function composed of 4 steps to encrypt a block of data. The round function is applied 10, 12 or 14 times depending on the key size."),(0,i.kt)("mermaid",{value:'flowchart LR\n    sk([Key])--\x3e xor\n    sk([Key])--\x3e rf1\n    sk([Key])--\x3e rf2\n    pt([Plaintext])--\x3e sb\n    subgraph rf [Round Function]\n        sb[SubBytes]--\x3esr[ShiftRows]--\x3emc[MixColumns]--\x3e xor(["\u2295"]) --\x3ead[AddRoundKey]\n    end\n    ad --\x3e rf1\n    rf1[Round Function] -.-> rf2[Round Function]\n    rf2 --\x3e cipher(Ciphertext)\n\n    style sk fill:#f9f,stroke:#333,stroke-width:4px\n    style rf1 fill:#ffffde,stroke:#aaaa33\n    style rf2 fill:#ffffde,stroke:#aaaa33'}),(0,i.kt)("h2",{id:"limitationscaveats"},"Limitations/Caveats"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"Is a block cipher"),".",(0,i.kt)("br",{parentName:"p"}),"\n","As-is it can only encrypt/decrypt fixed-length blocks of data. So a block cipher mode of operation must be applied for it to become an encryption/decryption algorithm applicable to messages of arbitrary length. ")),(0,i.kt)("div",{className:"footnotes"},(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol",id:"fn-1"},(0,i.kt)("a",{parentName:"li",href:"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf"},"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf"),(0,i.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}m.isMDXComponent=!0}}]);