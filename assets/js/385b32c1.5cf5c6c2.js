"use strict";(self.webpackChunkcryptography=self.webpackChunkcryptography||[]).push([[9244],{461:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>d});var n=a(9496);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},l=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),c=m(a),u=s,d=c["".concat(o,".").concat(u)]||c[u]||h[u]||r;return a?n.createElement(d,i(i({ref:t},l),{},{components:a})):n.createElement(d,i({ref:t},l))}));function d(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=a.length,i=new Array(r);i[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[c]="string"==typeof e?e:s,i[1]=p;for(var m=2;m<r;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8495:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var n=a(7605),s=(a(9496),a(461));const r={sidebar_position:1},i="Hash Function",p={unversionedId:"primitives/hash-function/intro",id:"primitives/hash-function/intro",title:"Hash Function",description:"A hash function is any function that can be used to map data of arbitrary size to fixed-size values, though there are some hash functions that support variable length output.",source:"@site/docs/primitives/hash-function/intro.md",sourceDirName:"primitives/hash-function",slug:"/primitives/hash-function/intro",permalink:"/docs/primitives/hash-function/intro",draft:!1,editUrl:"https://github.com/sripwoud/cryptography/tree/main/docs/docs/primitives/hash-function/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Hash Functions",permalink:"/docs/category/hash-functions"},next:{title:"SHA-2",permalink:"/docs/primitives/hash-function/sha2"}},o={},m=[{value:"Example",id:"example",level:2},{value:"Application(s)",id:"applications",level:2},{value:"Security",id:"security",level:2},{value:"Limitations / Caveats",id:"limitations--caveats",level:2}],l={toc:m},c="wrapper";function h(e){let{components:t,...a}=e;return(0,s.kt)(c,(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"hash-function"},"Hash Function"),(0,s.kt)("p",null,"A hash function is any function that can be used to map data of arbitrary size to fixed-size values, though there are some hash functions that support variable length output",(0,s.kt)("sup",{parentName:"p",id:"fnref-1"},(0,s.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),"."),(0,s.kt)("mermaid",{value:"graph LR\n\nA([Input <br><em>arbitrary length</em>]) --\x3eB[Hash Function]\nB --\x3e C([Digest<br><em>Fixed length</em><br> <code>c87d54...456</code>])"}),(0,s.kt)("h2",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"openssl dgst -sha256 -binary -out digest.bin file.txt\n")),(0,s.kt)("h2",{id:"applications"},"Application(s)"),(0,s.kt)("p",null,"Hash functions can be used data for integrity and authenticity checks (",(0,s.kt)("a",{parentName:"p",href:"../../definitions"},"checksums"),")."),(0,s.kt)("h2",{id:"security"},"Security"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"pre-image resistance/one-way: given a digest, it is infeasible to find a message that hashes to the digest."),(0,s.kt)("mermaid",{parentName:"li",value:"  graph LR\n  \n  A([Digest]) --\x3eB[Hash Function]\n  B --\x3e C([Input])\n  B -.-> A\n  C -.-> B\n  linkStyle 2 stroke:red, stroke-dasharray: 5;\n  linkStyle 3 stroke:red, stroke-dasharray: 5;"})),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"second pre-image resistance: given an input and the corresponding digest, it is infeasible to find a different input that hashes to the same digest."),(0,s.kt)("mermaid",{parentName:"li",value:" graph LR\n\n A([Input]) --\x3eB[Hash Function]\n B --\x3e C([Digest])\n D([?]) -.-> B -.-> C([Digest])\n\n style D stroke: red;\n linkStyle 2 stroke:red, stroke-dasharray: 5;\n linkStyle 3 stroke:red, stroke-dasharray: 5;"})),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"collision resistance: given a digest, it is infeasible to find two different messages that hash to it."),(0,s.kt)("mermaid",{parentName:"li",value:" graph LR\n\n A([?]) --\x3eB[Hash Function]\n B --\x3e C([Digest])\n D([?]) -.-> B -.-> C([Digest])\n\n style A stroke: red;\n style D stroke: red;\n linkStyle 0 stroke:red, stroke-dasharray: 5;\n linkStyle 1 stroke:red, stroke-dasharray: 5;\n linkStyle 2 stroke:red, stroke-dasharray: 5;\n linkStyle 3 stroke:red, stroke-dasharray: 5;"}))),(0,s.kt)("h2",{id:"limitations--caveats"},"Limitations / Caveats"),(0,s.kt)("admonition",{type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"  ",(0,s.kt)("strong",{parentName:"p"},"Length of input matters to avoid being able to find a second pre-image."),(0,s.kt)("br",{parentName:"p"}),"\n","If the input space is small, it becomes easy to iterate over it to find a pre-image for the digest.")),(0,s.kt)("admonition",{type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"  ",(0,s.kt)("strong",{parentName:"p"},"Length of digest matters to avoid collisions."),(0,s.kt)("br",{parentName:"p"}),"\n","This is why it is recommended to use a hash function with a digest length of at least 256 bits in practice (to have security of ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"128"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mfrac",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"mfrac"},"256"),(0,s.kt)("mn",{parentName:"mfrac"},"2"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"128 = \\frac{256}{2}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"128"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"="),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1.1901em",verticalAlign:"-0.345em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,s.kt)("span",{parentName:"span",className:"mfrac"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8451em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.655em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,s.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,s.kt)("span",{parentName:"span",style:{top:"-3.394em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"256"))))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.345em"}},(0,s.kt)("span",{parentName:"span"}))))),(0,s.kt)("span",{parentName:"span",className:"mclose nulldelimiter"}))))))," bits).")),(0,s.kt)("admonition",{type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"When using a pre-computed hash function as a data integrity, one needs to trust its origin: it assumes a trusted channel has been created.")),(0,s.kt)("div",{className:"footnotes"},(0,s.kt)("hr",{parentName:"div"}),(0,s.kt)("ol",{parentName:"div"},(0,s.kt)("li",{parentName:"ol",id:"fn-1"},(0,s.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Hash_function"},"https://en.wikipedia.org/wiki/Hash_function"),(0,s.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}h.isMDXComponent=!0}}]);